/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M9
 * Generated at: 2024-03-22 03:38:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class crud_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>CRUD</title>\r\n");
      out.write("<script src=\"js/jQuery.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("// \talert(\"hi\");\r\n");
      out.write("\t$(\"input[type='button']\").click(function(){\r\n");
      out.write("\t\ttr=$(this).parents('tr');\r\n");
      out.write("\t\tbtn=$(this).val();\r\n");
      out.write("\t\temp_id=tr.find(\"#lbl_empid\").html();\r\n");
      out.write("\t\tif(btn==\"Delete\"){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl:\"deleteemp\",\r\n");
      out.write("\t\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\t\tdataType:\"JSON\",\r\n");
      out.write("\t\t\t\tdata:{id:emp_id},\r\n");
      out.write("\t\t\t\tsuccess:function(res){\r\n");
      out.write("\t\t\t\t\tjson_text=JSON.stringify(res);\r\n");
      out.write("\t\t\t\t\tobj=JSON.parse(json_text);\r\n");
      out.write("\t\t\t\t\t//alert(res);\r\n");
      out.write("// \t\t\t\t\tif(obj.sms==\"success\"){\r\n");
      out.write("\t\t\t\t\t\ttr.hide();\r\n");
      out.write("// \t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if(btn==\"Edit\"){\r\n");
      out.write("\t\t\t$(this).val(\"Update\");\r\n");
      out.write("\t\t\ttr.find(\"#lbl_empname\").addClass('h');\r\n");
      out.write("\t\t\ttr.find(\"#lbl_empname\").removeClass('s');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttr.find(\"#lbl_sal\").addClass('h');\r\n");
      out.write("\t\t\ttr.find(\"#lbl_sal\").removeClass('s');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttr.find(\"#lbl_job\").addClass('h');\r\n");
      out.write("\t\t\ttr.find(\"#lbl_job\").removeClass('s');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttr.find(\"#lbl_deptno\").addClass('h');\r\n");
      out.write("\t\t\ttr.find(\"#lbl_deptno\").removeClass('s');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttr.find(\"#txt_empname\").addClass('s');\r\n");
      out.write("\t\t\ttr.find(\"#txt_empname\").removeClass('h');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttr.find(\"#txt_sal\").addClass('s');\r\n");
      out.write("\t\t\ttr.find(\"#txt_sal\").removeClass('h');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttr.find(\"#txt_job\").addClass('s');\r\n");
      out.write("\t\t\ttr.find(\"#txt_job\").removeClass('h');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttr.find(\"#txt_deptno\").addClass('s');\r\n");
      out.write("\t\t\ttr.find(\"#txt_deptno\").removeClass('h');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if(btn==\"Update\"){\r\n");
      out.write("\t\t\t$(this).val(\"Edit\");\r\n");
      out.write("\t\t\temp_name=tr.find(\"#txt_empname\").val();\r\n");
      out.write("\t\t\temp_sal=tr.find(\"#txt_sal\").val();\r\n");
      out.write("\t\t\temp_job=tr.find(\"#txt_job\").val();\r\n");
      out.write("\t\t\temp_deptno=tr.find(\"#txt_deptno\").val();\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl:\"updateemp\",\r\n");
      out.write("\t\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\t\tdata:{id:emp_id,sal:emp_sal,name:emp_name,job:emp_job,deptno:emp_deptno},\r\n");
      out.write("\t\t\t\tsuccess:function(res){\r\n");
      out.write("\t\t\t\t\tjson_text=JSON.stringify(res);\r\n");
      out.write("\t\t\t\t\tobj=JSON.parse(json_text);\r\n");
      out.write("\t\t\t\t\talert(res);\r\n");
      out.write("\t\t\t\t\tif(obj.sms==\"success\"){\r\n");
      out.write("\t\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write(".h{\r\n");
      out.write("\tdisplay:none;\r\n");
      out.write("}\r\n");
      out.write(".s{\r\n");
      out.write("\tdisplay:block;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table border=1 align=\"center\" width=\"90%\" style=\"border-collapse: collapse;\">\r\n");
      out.write("\t\t<caption>\r\n");
      out.write("\t\t\t<h3>User Details</h3>\r\n");
      out.write("\t\t</caption>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>EmpID</th>\r\n");
      out.write("\t\t\t<th>EmpName</th>\r\n");
      out.write("\t\t\t<th>Salary</th>\r\n");
      out.write("\t\t\t<th>Job</th>\r\n");
      out.write("\t\t\t<th>Dept. No</th>\r\n");
      out.write("\t\t\t<th>Action</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t");


		try {
		String url = "jdbc:mysql://localhost:3306/sdi";
			Class.forName("com.mysql.jdbc.Driver");
			Connection con = DriverManager.getConnection(url, "root", "");
			Statement stmt = con.createStatement();
			String query = "select * from employee";
			ResultSet rs = stmt.executeQuery(query);
			while (rs.next()) {

				out.print("<tr>");
				out.print("<td><label for='empid' id='lbl_empid'>" + rs.getInt(1)+ "</label></td>");
						
				out.print("<td><label id='lbl_empname' class='s'>" + rs.getString(2)+ "</label>");
				out.print("<input type='text' id='txt_empname' class='h' value='" + rs.getString(2) + "'></td>");
						
				out.print("<td><label id='lbl_sal' class='s'>" + rs.getInt(3)+ "</label>");
				out.print("<input type='text' id='txt_sal' class='h' value='" + rs.getInt(3) + "'></td>");
						
				out.print("<td><label id='lbl_job' class='s'>" + rs.getString(4)+ "</label>");
				out.print("<input type='text' id='txt_job' class='h' value='" + rs.getString(4) + "'></td>");
						
				out.print("<td><label id='lbl_deptno' class='s'>" + rs.getInt(5)+ "</label>");
				out.print("<input type='text' id='txt_deptno' class='h' value='" + rs.getInt(5) + "'></td>");
						
				out.print("<td>");
				out.print("<input type='button' value='Edit' style='width:50%;' />");
				out.print("<input type='button' value='Delete' style='width:50%;'>");
				out.print("</td>");

				out.print("</tr>");
			}
		} catch (Exception e) {
			out.print(e.getMessage());
		}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
